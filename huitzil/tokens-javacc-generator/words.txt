t_conditional,if,"if"
t_conditional,elsif,"elif"
t_conditional,unless,"unless"
t_parenthesis_group,parenthesis_open,"("
t_parenthesis_group,parenthesis_close,")"
t_colons,colons,":"
t_else,else,"else"
t_bool,true,"true"
t_bool,false,"false"
t_asiggnment,assignment,"="
t_comparison_operator,equal,"=="|"eq"
t_comparison_operator,equal_exactly,"==="|"id"
t_comparison_operator,less_than,"<"|"lt"
t_comparison_operator,less_equal,"<="|"le"
t_comparison_operator,greater_than,">"|"gt"
t_comparison_operator,greater_equal,">="|"ge"
t_comparison_operator,not_equal,"!="|"ne"
t_comparison_operator,not_equal_exactly,"!=="|"ni"
t_logic_operator,and_logic,"and"|"&&"
t_logic_operator,or_logic,"or"|"||"
t_logic_operator,not_logic,"not"|"!"
t_switch,switch,"switch"
t_case,case,"case"
t_default,default,"default"
t_break,break,"break"
t_next,next,"next"
t_not_yet,not_yet,"not yet"
t_again,again,"again"
t_loop,for,"for"
t_loop,while,"while"
t_loop,until,"until"
t_loop,iterator,"iterator"
t_loop,foreach,"foreach"
t_do,do,"do"
t_range,range,"range"|".."
t_comma,comma,","
t_output,output,"output"
t_text,text,"'"|""
t_input,input,"input"
t_comment,comment,"#"
t_comment,,"#>"
t_comment,,"<#"
t_aritmethic_operator,plus,"+"
t_aritmethic_operator,minus,"-"
t_aritmethic_operator,division,"/"
t_aritmethic_operator,division_floor,"//"
t_aritmethic_operator,multiplication,"*"
t_aritmethic_operator,pow,"**"
t_aritmethic_operator,module,"%"
t_aritmethic_operator_assignment,plus_assignment,"+="
t_aritmethic_operator_assignment,minus_assignment,"-="
t_aritmethic_operator_assignment,multiplication_assignment,"*="
t_aritmethic_operator_assignment,division_assignment,"/="
t_aritmethic_operator_assignment,division_floor_assignment,"//="
t_aritmethic_operator_assignment,pow_assignment,"**="
t_aritmethic_operator_assignment,module_assignment,"%="
t_bitwise_operator,and_binary,"&"
t_bitwise_operator,or_binary,"|"
t_bitwise_operator,xor_binary,"^"
t_bitwise_operator,complement_binary,"~"
t_bitwise_operator,left_shift_binary,"<<"
t_bitwise_operator,right_shift_binary,">>"
t_bitwise_operator_assignment,and_binary_assignment,"&="
t_bitwise_operator_assignment,or_binary_assignment,"|="
t_bitwise_operator_assignment,xor_binary_assignment,"^="
t_bitwise_operator_assignment,complement_binary_assignment,"~="
t_bitwise_operator_assignment,left_shift_binary_assignment,"<<="
t_bitwise_operator_assignment,right_shift_binary_assignment,">>="
t_type_operator,typeof,"typeof"
t_type_operator,instanceof,"instanceof"
t_type_operator,convert,"convert"
t_data_type,boolean,"boolean"
t_data_type,string,"string"
t_data_type,int,"int"
t_data_type,float,"float"
t_data_type,snot,"snot"
t_data_type,complex,"complex"
t_data_type,list,"list"
t_data_type,tuple,"tuple"
t_data_type,queue,"queue"
t_data_type,stack,"stack"
t_data_type,set,"set"
t_data_type,dictionary,"dictionary"
t_data_type,char,"char"
t_data_type,datetime,"datetime"
t_data_type,timestamp,"timestamp"
t_data_type,file,"file"
t_data_type,random,"random"
t_membership_operator,in,"in"
t_membership_operator,not in,"not in"
t_identity_operator,is,"is"
t_identity_operator,is not,"is not"
t_array,square_bracket_open,"["
t_array,square_bracket_close,"]"
t_set,curly_open,"{"
t_set,curly_close,"}"
t_try,try,"try"
t_catch,catch,"catch"
t_finally,finally,"finally"
t_throw,throw,"throw"
t_null,null,"null"
t_undefined,undefined,"undefined"
t_method,method,"method"
t_lambda,"lambda","lambda"|"=>"
t_return,return,"return"
t_data_security,public,"public"
t_data_security,private,"private"
t_data_security,protected,"protected"
t_data_security,internal,"internal"
t_class,class,"class"
t_class_construct,construct,"construct"
t_class_destruct,destruct,"destruct"
t_attribute,attribute,"attribute"
t_import,import,"import"
t_strict,strict,"strict"
t_var,var,"var"
t_values,letter,["a"-"z","A"-"Z"]
t_values,letters,(<letter>)+
t_values,digit,["0"-"9"]
t_values,digits,(<digit>)+
t_values,var_name,(<letter>|"_")(<letter>|"_")*
t_values,int_number,(-|+)?<digits>
t_values,float_number,<int_number>"."<digits>
t_values,snot_number,<int_number>("."<digits>)?(("e"|"E")("-"|"+")?["0"-"9"]+)?
t_values,complex_number,(<int_number>("."<digits>)?)(<int_number>("."<digits>)?)"i"
t_escape_character,escape_character,"\"
t_escape_character,backspace,"\b"
t_escape_character,form_feed,"\f"
t_escape_character,new_line,"\n"
t_escape_character,carriage_return,"\r"
t_escape_character,horizontal_tab,"\t"
t_escape_character,vertical_tab,"\v"
t_escape_character,single_quote,"\'"
t_escape_character,doble_quote,"\""
t_escape_character,backslash,"\"
t_string_operator,split,"split"
t_string_operator,replace,"replace"
t_string_operator,flip,"flip"
t_string_operator,lower,"lower"
t_string_operator,upper,"upper"
t_string_operator,trim,"trim"
t_string_operator,lenght,"lenght"
t_string_operator,capitalize,"capitalize"
t_string_operator,index,"index"
t_string_operator,concatenate,"concatenate"
t_concatenate,concatenate_operator,"."|".="