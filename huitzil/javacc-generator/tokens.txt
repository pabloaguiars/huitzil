TOKEN:
{
	//TOKEN's name: t_conditional
	<t_conditional: "if"|"elif"|"unless">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_parenthesis_group
	<t_parenthesis_group: "("|")">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_colons
	<t_colons: ":">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_else
	<t_else: "else">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_bool
	<t_bool: "true"|"false">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_asiggnment
	<t_asiggnment: "=">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_comparison_operator
	<t_comparison_operator: "=="|"eq"|"==="|"id"|"<"|"lt"|"<="|"le"|">"|"gt"|">="|"ge"|"!="|"ne"|"!=="|"ni">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_logic_operator
	<t_logic_operator: "&&"|"and"|"||"|"or"|"!"|"not">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_switch
	<t_switch: "switch">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_case
	<t_case: "case">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_default
	<t_default: "default">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_break
	<t_break: "break">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_next
	<t_next: "next">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_not_yet
	<t_not_yet: "not_yet">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_again
	<t_again: "again">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_loop
	<t_loop: "for"|"while"|"until"|"iterator"|"foreach">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_do
	<t_do: "do">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_range
	<t_range: ".."|"range">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_comma
	<t_comma: ",">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_output
	<t_output: "output">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_text
	<t_text: "'"|""\"""">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_input
	<t_input: "input">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_aritmethic_operator
	<t_aritmethic_operator: "+"|"-"|"/"|"//"|"*"|"**"|"%">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_aritmethic_operator_assignment
	<t_aritmethic_operator_assignment: "+="|"-="|"*="|"/="|"//="|"**=="|"%=">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_bitwise_operator
	<t_bitwise_operator: "&"|"|"|"^"|"~"|"<<"|">>">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_bitwise_operator_assignment
	<t_bitwise_operator_assignment: "&="|"|="|"^="|"~="|"<<="|">>=">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_type_operator
	<t_type_operator: "type_of"|"instance_of"|"convert">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_data_type
	<t_data_type: "boolean"|"string"|"int"|"float"|"snot"|"complex"|"list"|"tuple"|"queue"|"stack"|"set"|"dictionary"|"char"|"datetime"|"timestamp"|"file"|"random">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_membership_operator
	<t_membership_operator: "in"|"not_in">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_identity_operator
	<t_identity_operator: "is"|"not_is">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_array
	<t_array: "["|"]">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_set
	<t_set: "{"|"}">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_try
	<t_try: "try">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_catch
	<t_catch: "catch">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_finally
	<t_finally: "finally">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_throw
	<t_throw: "throw">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_null
	<t_null: "null">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_undefined
	<t_undefined: "undefined">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_method
	<t_method: "method">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_lambda
	<t_lambda: "=>"|"lambda">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_return
	<t_return: "return">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_data_security
	<t_data_security: "public"|"pribate"|"protected"|"internal">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_class
	<t_class: "class">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_class_construct
	<t_class_construct: "construct">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_class_destruct
	<t_class_destruct: "destruct">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_attribute
	<t_attribute: "attribute">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_my
	<t_my: "my">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_import
	<t_import: "import">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_strict
	<t_strict: "strict">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_var
	<t_var: "var">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_escape_character
	<t_escape_character: "\\"|"\\b"|"\\f"|"\\n"|"\\r"|"\\t"|"\\v"|"\\'"|"\\"""|"\\\\">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_string_method
	<t_string_method: "split"|"replace"|"flip"|"lower"|"upper"|"trim"|"lenght"|"capitalize"|"index"|"concatenate">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_dot
	<t_dot: ".">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_dot_assignment
	<t_dot_assignment: ".=">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_number_method
	<t_number_method: "abs"|"cail"|"cmp"|"exp"|"fabs"|"floor"|"log"|"log10"|"max"|"min"|"modf"|"pow"|"round"|"sqrt"|"random_range"|"choice"|"random_generate">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_trigonometric_method
	<t_trigonometric_method: "acos"|"asin"|"atan"|"cos"|"sin"|"tan"|"degrees"|"radians">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_array_method
	<t_array_method: "insert"|"insert_at"|"remove"|"remove_at"|"extend"|"clear"|"copy"|"count"|"reverse"|"sort"|"shuffle"|"peek"|"pop"|"push"|"enqueue"|"dequeue">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_set_method
	<t_set_method: "add"|"discard"|"get"|"difference"|"difference_symmetric"|"intersection"|"union"|"cartesian_product"|"complement">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_values
	<t_values: "([""a"-"z"|"("\""(~["\n"])"\"")|("'"(~["\n"])"'")"|"("\""(~["\n"])*"\"")|("'"(~["\n"])*"'")"|"("-"|"+")?(["0"-"9"])+"|"<t_int_value>"."(["0"-"9"])+"|"<t_int_value>("."(["0"-"9"])+)?(("e"|"E")("-"|"+")?(["0"-"9"])+)?"|"(<t_int_value>("."(["0"-"9"])+)?)(<t_int_value>("."(["0"-"9"])+)?)"i"">{  } : DEFAULT
}
TOKEN:
{
	//TOKEN's name: t_comment
	<t_comment: ""#"(~[">"|""#>"(~[])*"<#">{  } : DEFAULT
}
